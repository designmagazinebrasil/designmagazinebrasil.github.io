---
import { getCollection, render } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import ArrowLeft from '../../assets/icons/arrow-left.svg';
import ArrowRight from '../../assets/icons/arrow-right.svg';

export async function getStaticPaths() {
  const issues = await getCollection('issues');
	return issues.map((issue) => ({
		params: { slug: issue.id },
		props: { issue },
	}));
}

const { issue } = Astro.props;
const { Content } = await render(issue);

const covers = import.meta.glob<{ default: ImageMetadata }>('/src/assets/covers/*.{jpg,png,jpeg}', { eager: true });

const getCoverImage = (coverFileName: string) => {
	const coverPath = `/src/assets/covers/${coverFileName}`;
	return covers[coverPath]?.default;
};

// Find previous and next issues
const allIssues = await getCollection("issues")
	.then((issues) => issues.sort((a, b) => {
		return Number(a.id) - Number(b.id);
	}))
	.catch((err) => {
		console.error(err);
		return [];
	});
const currentIndex = allIssues.findIndex(i => i.id === issue.id);
const previousIssue = currentIndex > 0 ? allIssues[currentIndex - 1] : null;
const nextIssue = currentIndex < allIssues.length - 1 ? allIssues[currentIndex + 1] : null;

---

<Layout title={`Edição ${issue.id}`} description={`Leia a edição ${issue.id} da revista Design Magazine Brasil.`}>
	<section class="issue">
		<article class="container">
			<h1 class="section-title">#{issue.id}</h1>
			<div class="issue-content">
				<div class="issue-text">
					<h2>{issue.data.title}</h2>
					<Content />
					<a class="cta" href={`${issue.data.link}`} target="_blank">Baixar edição completa (PDF)</a>
				</div>
				{issue.data.cover && (
					<Image src={getCoverImage(issue.data.cover)!} width={400} alt={`Capa da edição ${issue.id} - ${issue.data.title}`} />
				)}
			</div>
		</article>
	</section>

	<section>
		<div class="container">
			<div class="issue-navigation" style="display: flex; justify-content: space-between; margin-top: 4rem;">
				{previousIssue ? (
					<a href={`/edicoes/${previousIssue.id}/`} class="issue-navigation-prev">
						<Image src={getCoverImage(previousIssue.data.cover)!} width={80} alt={`Capa da edição ${previousIssue.id} - ${previousIssue.data.title}`} />
						<div class="issue-navigation-text">
							<div class="issue-navigation-title"><ArrowLeft /> Edição #{previousIssue.id}</div>
							<div class="issue-navigation-subtitle">{previousIssue.data.title}</div>
						</div>
					</a>
				) : <div></div>}
				{nextIssue ? (
					<a href={`/edicoes/${nextIssue.id}/`} class="issue-navigation-next">
						<Image src={getCoverImage(nextIssue.data.cover)!} width={80} alt={`Capa da edição ${nextIssue.id} - ${nextIssue.data.title}`} />
						<div class="issue-navigation-text">
							<div class="issue-navigation-title">Edição #{nextIssue.id} <ArrowRight /></div>
							<div class="issue-navigation-subtitle">{nextIssue.data.title}</div>
						</div>
					</a>
				) : <div></div>}
			</div>
		</div>
	</section>
</Layout>

<style>

	.issue {
		background-color: var(--color-background-secondary);
		padding-block: 4rem;
		position: relative;
		margin-top: 12rem;

		h1 {
			color: var(--color-background-secondary);
		}
	}
	.issue-content {
		display: flex;
		gap: 4rem;

		.issue-text {
			flex: 1;
			font-size: 1.5rem;
			min-width: 0;

			p {
				text-wrap: pretty;
			}

			.cta {
				display: inline-block;
				background-color: var(--color-accent);
				font-family: 'Crimson Pro', serif;
				font-weight: 700;
				color: white;
				padding: 1rem 2rem;
				border-radius: 8px;
				text-decoration: none;
				transition: background-color 0.3s ease;

				&:hover {
					background-color: var(--color-accent-dark);
				}
			}
		}

		img {
			border-radius: 16px;
			margin-top: -10rem;
		}
	}
	.issue-navigation {
		a {
			text-decoration: none;
			--color: var(--color-foreground-secondary);
			color: var(--color);
			display: flex;
			align-items: center;
			gap: 1rem;
			font-size: 1.2rem;
			transition: color 0.3s ease;

			&:hover {
				--color: var(--color-accent);
			}
		}

		img {
			border-radius: 4px;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
		}
	}

	.issue-navigation-next {
		flex-direction: row-reverse;
		text-align: left;

		.issue-navigation-text {
			align-items: flex-start;
		}
	}

	.issue-navigation-prev {
		.issue-navigation-text {
			align-items: flex-end
		}
	}

	.issue-navigation-text {
		display: flex;
		flex-direction: column;
	}

	.issue-navigation-title {
		font-weight: 700;
		display: flex;
		align-items: center;
		gap: 1rem;

		svg {
			width: 1.5rem;
			height: auto
			fill: var(--color);
			transition: fill 0.3s ease;
			path {
				fill: var(--color);
				transition: fill 0.3s ease;
			}
		}
	}
	.issue-navigation-subtitle {
		font-size: 1rem;
		white-space: nowrap;
	}
</style>
