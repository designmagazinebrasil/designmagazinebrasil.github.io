---
import { getCollection, render } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const issues = await getCollection('issues');
	return issues.map((issue) => ({
		params: { slug: issue.id },
		props: { issue },
	}));
}

const { issue } = Astro.props;
const { Content } = await render(issue);

const covers = import.meta.glob<{ default: ImageMetadata }>('/src/assets/covers/*.{jpg,png,jpeg}', { eager: true });

const getCoverImage = (coverFileName: string) => {
	const coverPath = `/src/assets/covers/${coverFileName}`;
	return covers[coverPath]?.default;
};

// Find previous and next issues
const allIssues = await getCollection("issues")
	.then((issues) => issues.sort((a, b) => {
		return Number(a.id) - Number(b.id);
	}))
	.catch((err) => {
		console.error(err);
		return [];
	});
const currentIndex = allIssues.findIndex(i => i.id === issue.id);
const previousIssue = currentIndex > 0 ? allIssues[currentIndex - 1] : null;
const nextIssue = currentIndex < allIssues.length - 1 ? allIssues[currentIndex + 1] : null;

---

<Layout title={`Edição ${issue.id} - ${issue.data.title}`} description={`Leia a edição ${issue.data.number} da revista DMBR, intitulada "${issue.data.title}".`}>
	<section class="issue">
		<article class="container">
			<h1 class="section-title">#{issue.id}</h1>
			<div class="issue-content">
				<div class="issue-text">
					<h2>{issue.data.title}</h2>
					<Content />
					<a class="cta" href={`${issue.data.link}`} target="_blank">Leia mais</a>
				</div>
				{issue.data.cover && (
					<Image src={getCoverImage(issue.data.cover)!} width={400} alt={`Capa da edição ${issue.id} - ${issue.data.title}`} />
				)}
			</div>
		</article>
	</section>

	<section>
		<div class="container">
			<div class="issue-navigation" style="display: flex; justify-content: space-between; margin-top: 4rem;">
				{previousIssue ? (
					<a href={`/edicoes/${previousIssue.id}/`}>
						&larr; Edição {previousIssue.id} - {previousIssue.data.title}
					</a>
				) : <div></div>}
				{nextIssue ? (
					<a href={`/edicoes/${nextIssue.id}/`}>
						Edição {nextIssue.id} - {nextIssue.data.title} &rarr;
					</a>
				) : <div></div>}
			</div>
		</div>
	</section>
</Layout>

<style>

	.issue {
		background-color: var(--color-background-secondary);
		padding-block: 4rem;
		position: relative;
		margin-top: 12rem;

		h1 {
			color: var(--color-background-secondary);
		}
	}
	.issue-content {
		display: flex;
		gap: 4rem;

		.issue-text {
			flex: 1;
			font-size: 1.5rem;
			min-width: 0;

			p {
				text-wrap: pretty;
			}

			.cta {
				display: inline-block;
				background-color: var(--color-accent);
				font-family: 'Crimson Pro', serif;
				font-weight: 700;
				color: white;
				padding: 1rem 2rem;
				border-radius: 8px;
				text-decoration: none;
			}
		}

		img {
			border-radius: 16px;
			margin-top: -10rem;
		}
	}
	.issue-navigation {
		a {
			text-decoration: none;
		}
	}
</style>
