---
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from 'astro:assets';

const allIssues = await getCollection("issues")
	.then((issues) => issues.sort((a, b) => {
		return Number(b.id) - Number(a.id);
	}))
	.catch((err) => {
		console.error(err);
		return [];
	});

const issuesByYear = allIssues.reduce<Record<string, CollectionEntry<'issues'>[]>>((acc, issue) => {
	const year = issue.data.year;
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(issue);
	return acc;
}, {});

const covers = import.meta.glob<{ default: ImageMetadata }>('/src/assets/covers/*.{jpg,png,jpeg}', { eager: true });

const getCoverImage = (coverFileName: string) => {
	const coverPath = `/src/assets/covers/${coverFileName}`;
	return covers[coverPath]?.default;
};

---

<div class="issues">
	{Object.keys(issuesByYear).sort((a, b) => Number(b) - Number(a)).map((year) => (
		<section>
			<div class="container">
				<h2 class="section-title">{year}</h2>
				<div class="issues-list">
					 {issuesByYear[year].map((issue) => (
						<a href={`/edicoes/${issue.id}/`}>
							{issue.data.cover && (
								<Image src={getCoverImage(issue.data.cover)!} width={240} alt={`Capa da edição ${issue.id} - ${issue.data.title}`} />
							)}
						</a>
					))}
				</div>
			</div>
		</section>
	))}
</div>

<style>
	.issues {
		margin-top: 12rem;
	}
	.issues section:nth-child(odd) {
		--bg-color: var(--color-background-secondary);
	}
	.issues section:nth-child(even) {
		--bg-color: var(--color-background);
	}

	.issues section {
		background-color: var(--bg-color);
		padding-block: 2rem;
		position: relative;
		padding-block: 1rem 12rem;

		&:last-of-type {
			padding-bottom: 4rem;
		}
	}

	.issues .issues-list {
		position: relative;
		z-index: 1;
		margin-top: -4rem;
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		justify-items: center;
		align-items: center;
		gap: 4rem 2rem;

		img {
			max-width: 200px;
			height: auto;
			border-radius: 8px;
			display: block;
			box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1),
				0 1px 5px rgba(0, 0, 0, 0.25);
			transition: all 0.3s ease;
		}

		a {
			perspective: 1000px;
    		perspective-origin: left center;

			&:hover img {
				transform: scale(1.1) rotateY(-15deg);
				box-shadow: 0 8px 30px rgba(0, 0, 0, 0.05),
					0 4px 10px rgba(0, 0, 0, 0.15);
			
		}
	

		@media (max-width: 767px) {
			grid-template-columns: repeat(2, 1fr);
		}
	}
</style>